<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

  <channel>
    <title>spparker.com // Scott Parker</title>
    <link>http://www.spparker.com/</link>
    <atom:link href="http://www.spparker.com/rss.xml" rel="self" type="application/rss+xml" />
    <description>A blog like any other, except this one is mine.</description>
    <language>en-us</language>
    <pubDate>Mon, 11 Jul 2011 22:24:30 CDT</pubDate>
    <lastBuildDate>Mon, 11 Jul 2011 22:24:30 CDT</lastBuildDate>

    
      <item>
        <title>ChiSC Meeting - 7/20 - "Processes & Patterns"</title>
        <link>http://www.spparker.com/posts/2011-07-11-chisc-processes-patterns</link>
        <pubDate>Mon, 11 Jul 2011 00:00:00 CDT</pubDate>
        <author>Scott Parker</author>
        <guid>http://www.spparker.com/posts/chisc-processes-patterns</guid>
        <description>&lt;p&gt;&lt;strong&gt;We’re in need of a venue for this meeting - if your know of a place in the Loop that could help, please &lt;a href=&quot;/contact&quot;&gt;contact me&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We’re all familiar with words like “process” and “patterns” - in this meeting, we’ll look at different ways to think about and apply those terms in ways you may not expect.&lt;/p&gt;

&lt;p&gt;Groupon’s &lt;strong&gt;Blake Smith&lt;/strong&gt; will begin by examining why design patterns lead to good designs at the small-scale program level, why they often get ignored at the macro large-scale system level, and the impacts of doing so on your applications. &lt;/p&gt;

&lt;p&gt;Then we’ll switch gears and go through a group exercise on understanding why your employer, (yes, &lt;em&gt;your&lt;/em&gt; employer) has the process it does and how that impacts you. As with the previous exercises, this could be a huge success or huge failure but should be entertaining either way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As always, anyone of any experience level and any background is welcome to come and participate.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Food and socialization will begin at 6PM on Wednesday, July 20th, and we’ll the start the meeting a bit after that. Once we’re done, we’ll wander on down the street to socialize and intoxify.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Both portions be interactive, so please come ready to participate.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To stay informed on what’s happening with ChiSC, please join the mailing list at &lt;a href=&quot;http://groups.google.com/group/chisc&quot;&gt;http://groups.google.com/group/chisc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you there!
-SP&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Planning to Plan</title>
        <link>http://www.spparker.com/posts/2011-06-12-on-making-plans</link>
        <pubDate>Sun, 12 Jun 2011 00:00:00 CDT</pubDate>
        <author>Scott Parker</author>
        <guid>http://www.spparker.com/posts/on-making-plans</guid>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/You-will-moon-Blacker-Freeman/dp/0394823400&quot;&gt;&lt;img src=&quot;http://spparker.com/images/to_the_moon.jpg&quot; title=&quot;&amp;quot;You Will Go To The Moon&amp;quot;&quot; alt=&quot;&amp;quot;You Will Go To The Moon&amp;quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last plan for my career led me to dropping out of a PhD program rather spectacularly. Ever since I&amp;rsquo;ve unconsciously avoided such long-term plans and instead focused on whatever interested me at the moment. This strategic lack of strategy has been incredibly successful so far and brought me some &lt;a href=&quot;http://www.obtiva.com/culture&quot;&gt;very&lt;/a&gt; &lt;a href=&quot;http://www.groupon.com&quot;&gt;good&lt;/a&gt; &lt;a href=&quot;http://groups.google.com/group/chisc&quot;&gt;things&lt;/a&gt;. Strangely, it also helps in identifying opportunities, as some things are easier to see when you&amp;rsquo;re not looking for them.&lt;/p&gt;

&lt;p&gt;In other words, avoiding any definite long-term plans has been a very good plan so far.&lt;/p&gt;

&lt;p&gt;The problem with interests is that they have an awful tendency to lead to ideas, and those ideas to plans. That&amp;rsquo;s where I find myself now. For some time, I&amp;rsquo;ve been interested in all the ways software organizations react to change. Change in their growth, in their mission, or in their structure. It&amp;rsquo;s something we developers seem to think about without really grasping how these fundamental organizational strategies impact our success on a daily basis.&lt;/p&gt;

&lt;p&gt;So this is a topic that interests me, and one wherein there&amp;rsquo;s a good amount of opportunity to be found. We&amp;rsquo;ll see where this takes me, but I think it&amp;rsquo;s safe to say some plans are coming together.&lt;/p&gt;

&lt;p&gt;Weird!&lt;/p&gt;

&lt;p&gt;-SP&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Keeping Jekyll Classy</title>
        <link>http://www.spparker.com/posts/2011-04-26-keeping-jekyll-classy</link>
        <pubDate>Tue, 26 Apr 2011 00:00:00 CDT</pubDate>
        <author>Scott Parker</author>
        <guid>http://www.spparker.com/posts/keeping-jekyll-classy</guid>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/jonthor6/5548240797/&quot;&gt;&lt;img src=&quot;http://spparker.com/images/classy.jpg&quot; title=&quot;&amp;quot;classy dude&amp;quot; by jonthor6&quot; alt=&quot;&amp;quot;classy dude&amp;quot; by jonthor6&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For some time now I&amp;rsquo;ve been hearing fellow dweebs sing the praises of &lt;a href=&quot;http://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;, a static HTML generator built in Ruby. There&amp;rsquo;s clearly lots to love in Jekyll for the programmer-blogger. Creating your own HTML layouts is simple as Jekyll mostly stays out of your way (compare to customizing a Wordpress layout, for instance). It&amp;rsquo;s well-suited towards putting your entire blog, posts and all, into source control. The output is just static HTML, so you can deploy to just about any web server known to man.&lt;/p&gt;

&lt;p&gt;Out-of-the-box Jekyll comes without many of the frills that make for a compelling blog and a pleasant reading experience, however. A quick glance through some of &lt;a href=&quot;http://github.com/mojombo/jekyll/wiki/Sites&quot;&gt;the sites powered by Jekyll&lt;/a&gt; prove that it&amp;rsquo;s very easy to write a blog with Jekyll, but it&amp;rsquo;s harder to read one.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;d be mistaken to walk away from Jekyll though. Jekyll is an ultra-lightweight framework that is malleable by design. With just a little bit of elbow grease (or by just &lt;a href=&quot;http://github.com/citizenparker/incrediblog&quot;&gt;looking at someone else&amp;rsquo;s work&lt;/a&gt;), you can mould it into precisely what suits your needs and still have done less work than it takes to make your own Wordpress theme. I&amp;rsquo;ll show you a few of the things I&amp;rsquo;ve done and hopefully give you the confidence to start building your own Jekyll hacks.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to dive into each of the following &amp;ldquo;neat&amp;rdquo; things I did and show the accompanying source. All of this comes from my publicly available &lt;a href=&quot;http://github.com/citizenparker/incrediblog&quot;&gt;Github repo &amp;lsquo;Incrediblog&amp;rsquo;&lt;/a&gt; that contains the full source (with posts) to this site.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#rss&quot;&gt;RSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pagination&quot;&gt;Pagination&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#posting&quot;&gt;Image Posting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#watermarking&quot;&gt;Image Watermarking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#duostack&quot;&gt;Duostack Hosting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;rsquo;s go!&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;rss&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;rss&quot;&gt;RSS&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;To use this, just place &lt;a href=&quot;http://github.com/citizenparker/incrediblog/raw/master/rss.xml&quot;&gt;rss.xml&lt;/a&gt; in the root directory of your Jekyll installation and modify it appropriately for your own page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jekyll doesn&amp;rsquo;t have any RSS support out of the box for generating a feed, so this was the first thing I decided to create. Thankfully you have the tools to build what you need. Jekyll will process and convert any file that doesn&amp;rsquo;t begin with an underscore. The assumption is that most of these files will be HTML or converted into HTML. However, there&amp;rsquo;s nothing stopping you from making your own &amp;ldquo;rss.xml&amp;rdquo; file that Jekyll will process and make dynamic.&lt;/p&gt;

&lt;p&gt;Once you realize that, building the RSS file is straightforward. I started looking at the RSS specifications and writing my own, but that&amp;rsquo;s much more painful than it needs to be. I recommend looking at the &lt;a href=&quot;http://github.com/coyled/coyled.com/blob/master/rss.xml&quot;&gt;coyled.com rss.xml&lt;/a&gt; and starting from there. You can also take a look at &lt;a href=&quot;http://github.com/citizenparker/incrediblog/master/rss.xml&quot;&gt;my rss.xml&lt;/a&gt; which is based on his work.&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;pagination&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;pagination&quot;&gt;Pagination&lt;/h2&gt;

&lt;p&gt;A common pattern with Jekyll blogs is that the home page consists only of links to other articles and posts on the site. That&amp;rsquo;s very un-blog-like and not the greatest reading experience. I want the latest and greatest articles to be shown in full, but I only want to show a few at once.&lt;/p&gt;

&lt;p&gt;I need pagination!&lt;/p&gt;

&lt;p&gt;Jekyll provides the components you&amp;rsquo;ll need for this feature - you just need to assemble them. Just add something like &lt;span class=&quot;inline-syntax&quot;&gt;paginate: 5 &lt;/span&gt; to your _config.yml to enable pagination. Once this is done, you&amp;rsquo;ll see that Jekyll will generate an &lt;span class=&quot;inline-syntax&quot;&gt;index.html &lt;/span&gt; as well as a &lt;span class=&quot;inline-syntax&quot;&gt;/pageX/index.html &lt;/span&gt; for each page of your index.&lt;/p&gt;

&lt;p&gt;Next, you just need to combine the &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Template-Data&quot;&gt;Jekyll Template Data&lt;/a&gt; with some &lt;a href=&quot;http://info.getcashboard.com/topics/liquid_basics&quot;&gt;Liquid syntax&lt;/a&gt; to build out the &amp;ldquo;Next Page / Previous Page&amp;rdquo; links. Here&amp;rsquo;s an example from my index.html:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;paging&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  {&amp;#37; if paginator.previous_page &amp;#37;}
    {&amp;#37; if paginator.previous_page == 1 &amp;#37;}
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;lArr;&lt;/span&gt; Previous Page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    {&amp;#37; else &amp;#37;}
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/page&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;lArr;&lt;/span&gt; Previous Page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    {&amp;#37; endif &amp;#37;}
  {&amp;#37; endif &amp;#37;}

  Page {{ paginator.page }} of {{ paginator.total_pages }}

  {&amp;#37; if paginator.next_page &amp;#37;}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/page&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Next Page &lt;span class=&quot;ni&quot;&gt;&amp;amp;rArr;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  {&amp;#37; endif &amp;#37;}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The only tricky part is that you have to check to see if you&amp;rsquo;re linking back to the first page, as it will always be &lt;span class=&quot;inline-syntax&quot;&gt;index.html &lt;/span&gt; and not &lt;span class=&quot;inline-syntax&quot;&gt;/pageX/index.html &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;posting&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;image-posting&quot;&gt;Image Posting&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;To use this, just place &lt;a href=&quot;http://github.com/citizenparker/incrediblog/raw/master/_plugins/image_block.rb&quot;&gt;image_block.rb&lt;/a&gt; in your &lt;span class=&quot;inline-syntax&quot;&gt;/_plugins &lt;/span&gt; directory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the reasons I&amp;rsquo;m sweet on Jekyll is that it lets me write my posts in Textile or Markdown, but they both have a fairly human-unfriendly syntax for embedding images, let alone images that link to URLs or have sensible &amp;ldquo;title&amp;rdquo; and &amp;ldquo;alt&amp;rdquo; attributes.&lt;/p&gt;

&lt;p&gt;I decided to make my own image tag for posts then. Ultimately I wanted a syntax like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;... blah blah blah yakety smackety ...
{&amp;#37; image my_cool_image.jpg &amp;#37;}
  title: This is just a test title.
  alt: Something descriptive
  link: http://www.google.com
{&amp;#37; endimage &amp;#37;}
 ... and so on ...
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Neither Jekyll nor Liquid support this out of the box, so this requires a &lt;a href=&quot;http://github.com/mojombo/jekyll/wiki/Plugins&quot;&gt;Jekyll plugin&lt;/a&gt; to add this new Liquid syntax. New tags require you to extend the &lt;span class=&quot;inline-syntax&quot;&gt;Liquid::Block &lt;/span&gt; class and to override the &lt;span class=&quot;inline-syntax&quot;&gt;def render(context) &lt;/span&gt; method. Given that, here&amp;rsquo;s the plugin I ended up writing:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ImageBlock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Block&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@image_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;load_options&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block_contents&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link?&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;a href=&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link_url&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_tag&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/a&amp;gt;&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;image_tag&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;image_tag&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;img src=&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_url&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39; title=&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39; alt=&amp;#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;instance_variable_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;@&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;block_contents&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@nodelist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\n/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# turn &amp;quot; blah: bloop bleep&amp;quot; into [&amp;quot;blah&amp;quot;, &amp;quot;bloop bleep&amp;quot;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^\s*(\S+):(.*)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;captures&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;captures&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;image_url&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://spparker.com/images/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@image_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;link?&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link_url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;link_url&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@image_name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alt&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@alt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;register_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;image&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ImageBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A few notes about this. All of my images would be in the same directory &lt;span class=&quot;inline-syntax&quot;&gt;/images &lt;/span&gt; so I didn&amp;rsquo;t want to specify that everywhere. I also wanted every attribute in that Liquid block to be optional. Oh, and &lt;span class=&quot;inline-syntax&quot;&gt;block_contents &lt;/span&gt; is some Liquid black magic that I couldn&amp;rsquo;t find a way around&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;watermarking&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;image-watermarking&quot;&gt;Image Watermarking&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;To use, just place that file in your &lt;span class=&quot;inline-syntax&quot;&gt;/_plugins &lt;/span&gt; directory, and make sure you have ImageMagick and the MiniMagick gems installed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you remember one thing about me, it&amp;rsquo;s this: I&amp;rsquo;m a classy dude&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. I want my blog to be classy too, and so that means watermarking all the images I post with my website.&lt;/p&gt;

&lt;p&gt;Thankfully &lt;a href=&quot;http://www.imagemagick.org/&quot;&gt;ImageMagick&lt;/a&gt; and the &lt;a href=&quot;https://github.com/probablycorey/mini_magick&quot;&gt;MiniMiagick gem&lt;/a&gt; make this pretty easy. This means I need a &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Plugins&quot;&gt;Jekyll Generator&lt;/a&gt; - a plugin that creates static files for the site. NOTE: because of &lt;a href=&quot;https://github.com/mojombo/jekyll/issues/268&quot;&gt;this bug&lt;/a&gt; in the latest version of Jekyll, you&amp;rsquo;ll also need to include a hack to prevent Jekyll from removing all those generated files. You can grab mine at &lt;a href=&quot;http://github.com/citizenparker/incrediblog/raw/master/_plugins/generator_hack.rb&quot;&gt;http://github.com/citizenparker/incrediblog/raw/master/_plugins/generator_hack.rb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From there, it&amp;rsquo;s a simple two-step process to start watermarking the images. First, I use &lt;a href=&quot;http://github.com/citizenparker/incrediblog/raw/master/_images/support/regen_stamp.sh&quot;&gt;this shell script&lt;/a&gt; to create the watermark image (&amp;ldquo;spparker.com&amp;rdquo; in this case.)&lt;/p&gt;

&lt;p&gt;Then I created this generator plugin to stamp each file in &lt;span class=&quot;inline-syntax&quot;&gt;_images &lt;/span&gt; with that watermark and dump the result in &lt;span class=&quot;inline-syntax&quot;&gt;/images &lt;/span&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;mini_magick&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;fileutils&amp;#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ImageGenerator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Generator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;safe&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;priority&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:low&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;_images/*&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;convert_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;destination&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;convert_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;old_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MiniMagick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;old_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;composite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MiniMagick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stamp_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gravity&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;southeast&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_file&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;old_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destination_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;base_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;destination_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mkdir_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;old_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stamp_path&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;_images/support&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;stamp.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id=&quot;contact&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;contact-me&quot;&gt;Contact Me&lt;/h2&gt;

&lt;p&gt;Obviously, my blog is poised to set the world aflame. All of that enthusiasm and passion will go to waste though if people can&amp;rsquo;t reach out to me and let me know how much my work has personally moved them and their families. A &amp;ldquo;Contact&amp;rdquo; page was in order.&lt;/p&gt;

&lt;p&gt;This is a tall order for a static HTML generator to handle. After reading &lt;a href=&quot;https://gist.github.com/463598&quot;&gt;this gist&lt;/a&gt; I decided to build a similar light-weight Sinatra app and some Javascript trickery to send emails that the static HTML pages will POST to.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the Sinatra app in full:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pony&amp;#39;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Emailer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Pony&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;EMAIL_TO&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:from&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;EMAIL_FROM&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;[spparker.com] Message from &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
      &lt;span class=&quot;ss&quot;&gt;:body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:via&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:smtp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:via_options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:address&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;smtp.gmail.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:port&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;587&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:enable_starttls_auto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:user_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;EMAIL_USERNAME&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;EMAIL_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:authentication&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:plain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;spparker.com&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact.html?success=true&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;error&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact.html?errors=true&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There&amp;rsquo;s really not much to it. The contact page then just checks for the &amp;ldquo;success&amp;rdquo; or &amp;ldquo;errors&amp;rdquo; URL parameters to display an appropriate message. A little wonky, but it works and it saves me from serving any HTML content outside of Jekyll.&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;duostack&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;duostack-hosting&quot;&gt;Duostack Hosting&lt;/h2&gt;

&lt;p&gt;At this point we&amp;rsquo;re done tweaking Jekyll to suit our needs. The last bit of &amp;ldquo;neat&amp;rdquo; was setting this up to run on &lt;a href=&quot;http://www.dupstack.com&quot;&gt;Duostack&lt;/a&gt;, a Ruby&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; cloud-hosting inspired by Heroku that hides all of the nastiness involved in administering a server. I&amp;rsquo;d been itching to try it for awhile and this gave me a semi-reasonable way to do so. Thanks to the &lt;a href=&quot;https://github.com/bry4n/rack-jekyll&quot;&gt;rack-jekyll gem&lt;/a&gt; this is pretty straightforward.&lt;/p&gt;

&lt;p&gt;All I needed was this config.ru Rackup file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bundler/setup&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rack/jekyll&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./lib/email&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Emailer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(Note that &amp;ldquo;use Emailer&amp;rdquo; is the call to the &lt;a href=&quot;#contact&quot;&gt;Sinatra app&lt;/a&gt; I built to power the Contact page)&lt;/p&gt;

&lt;p&gt;Then all that&amp;rsquo;s required to setup and deploy this once you have a Duostack account is this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&amp;gt; duostack create &amp;#39;my-cool-app-name-here&amp;#39;
&amp;gt; git push origin duostack
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping Up&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m sure at least a few of these customizations aren&amp;rsquo;t for you, or may need some tweaking before they are. I hope that you see how malleable Jekyll is, and how simple customizing it can be. Again, you are encouraged to steal from &lt;a href=&quot;http://github.com/citizenparker/incrediblog&quot;&gt;my github repo&lt;/a&gt;, although a nod in your README or somewhere else would be awfully nice of you. &lt;/p&gt;

&lt;p&gt;-SP&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;If you find a way around that, please &lt;a href=&quot;/contact&quot;&gt;contact me&lt;/a&gt;. I hate the &lt;span class=&quot;inline-syntax&quot;&gt;block_contents &lt;/span&gt; method.&lt;a href=&quot;#fnref:1&quot; rev=&quot;footnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;I am writing this in a orange stocking cap and &lt;a href=&quot;http://www.topatoco.com/merchant.mvc?Screen=PROD&amp;amp;Store_Code=TO&amp;amp;Product_Code=BEAT-READING&amp;amp;Category_Code=BEAT&quot;&gt;this t-shirt&lt;/a&gt;.&lt;a href=&quot;#fnref:2&quot; rev=&quot;footnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;And node.js too.&lt;a href=&quot;#fnref:3&quot; rev=&quot;footnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
      </item>
    
      <item>
        <title>The Day-to-Day</title>
        <link>http://www.spparker.com/posts/2009-11-24-the-day-to-day</link>
        <pubDate>Tue, 24 Nov 2009 00:00:00 CST</pubDate>
        <author>Scott Parker</author>
        <guid>http://www.spparker.com/posts/the-day-to-day</guid>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/denisecarbonell/3923601326/&quot;&gt;&lt;img src=&quot;http://spparker.com/images/tools.jpg&quot; title=&quot;&amp;quot;the tools from maine&amp;quot; by denisecarbonell&quot; alt=&quot;&amp;quot;the tools from maine&amp;quot; by denisecarbonell&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scott Koon recently wrote a great article, &lt;a href=&quot;http://www.lazycoder.com/weblog/2009/11/23/pros-dont-make-do/&quot;&gt;Pros Don’t Make Do&lt;/a&gt;. Scott argues that in order to be a true professional, you have to use the right tool for the job.&lt;/p&gt;

&lt;p&gt;I agree entirely. Rarely is there one silver-bullet solution to every software problem. No language, framework, or toolset is appropriate to every situation, but numerous software shops assume the opposite. Many software developers are or have been in such “one-size-fits-all” organizations. Is there a reason in these places to study tools and frameworks you may not be able to use right here, right now?&lt;/p&gt;

&lt;p&gt;Expanding your repertoire carries long-term benefits to your career, but hardly impacts the day-to-day. However, there are less obvious and more immediate benefits to such knowledge too. Learning a toolset doesn’t just add to your base of knowledge, it changes the way you write software. It goes back to the idea of “programming into a language” rather than “programming in a language” to borrow from &lt;a href=&quot;http://www.amazon.com/gp/product/0735619670&quot;&gt;Steve McConnell’s Code Complete&lt;/a&gt;. McConnell argues that your code should ultimately not be constrained by the choice of language or toolset.&lt;/p&gt;

&lt;p&gt;Writing such code is only possible by either being a super-genius, or by expanding your knowledge of tools and technologies. Perhaps a concrete example will help. Last week I, along with another .NET developer from a different company, attended a meeting of the &lt;a href=&quot;http://www.meetup.com/chicagoscala/&quot;&gt;Chicago Area Scala Enthusiasts&lt;/a&gt; about making Domain-Specific Languages with Scala, via &lt;a href=&quot;http://www.coconut-palm-software.com/&quot;&gt;Dave Orme&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Neither of us will ever, EVER have a chance to use Scala in our current jobs. However, all we could talk about after the meeting was how Dave’s use of implicit conversions in Scala to create DSLs changed how we viewed C#’s extension methods.&lt;/p&gt;

&lt;p&gt;Whereas before we have viewed extension methods as mainly a way to add missing convenience methods to pre-built classes, now we saw them as a useful method to change the entire meaning of constants and classes, to build basic DSLs out of primitives and constants in .NET.&lt;/p&gt;

&lt;p&gt;I have similar stories about Ruby’s method_missing, aspect oriented programming, and pair programming, to name a few off the top of my head. All of these have provided opportunities to rethink how I’m writing code independently of these technologies.&lt;/p&gt;

&lt;p&gt;Of course your mileage may vary. If you decide you have nothing to gain in the day-to-day from learning an alien language or unfamiliar toolset, you are destined to be proved correct regardless. If instead you approach such opportunities with an open mindset, you may be surprised at what new thoughts and ideas trickle in.&lt;/p&gt;

&lt;p&gt;Or if you are like me, you’ll be pleasantly surprised when anything whatsoever manages to trickle in.&lt;/p&gt;

&lt;p&gt;-SP&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Spray-and-Pray Developer Resumes</title>
        <link>http://www.spparker.com/posts/2009-09-28-spray-and-pray-developer-resumes</link>
        <pubDate>Mon, 28 Sep 2009 00:00:00 CDT</pubDate>
        <author>Scott Parker</author>
        <guid>http://www.spparker.com/posts/spray-and-pray-developer-resumes</guid>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/psd/3055756907/&quot;&gt;&lt;img src=&quot;http://spparker.com/images/resume.jpg&quot; title=&quot;&amp;quot;TiddlyRésumé&amp;quot; by psd&quot; alt=&quot;&amp;quot;TiddlyRésumé&amp;quot; by psd&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I interview a fair amount of software developers (although not as often as I used to, sadly), and so I have people ask me about a variety of issues related to finding programming gigs. What certifications, what schools, what questions to ask, and even what attire to wear.&lt;/p&gt;

&lt;p&gt;I really thought interview attire was something of a solved problem, but apparently not.&lt;/p&gt;

&lt;p&gt;I digress. When I’m asked one of those questions, I usually try to stress that it’s hard to hurt yourself when answering any of the above questions. Yeah, some schools are better than others, but that doesn’t matter too much for programmers, especially once they have a year or so of experience. Certifications usually don’t hurt or help too much unless it helps you meet a job’s requirements (although an &lt;a href=&quot;http://www.xmlmaster.org/en/&quot;&gt;XML Master Certification&lt;/a&gt; is resume poison).&lt;/p&gt;

&lt;p&gt;However, there is one particular brand of resume that, regardless of talent, really irks me and makes it difficult to get on my good side, let alone get a recommendation from me. I hate, hate, HATE finding a “spray and pray” resume. This is the kind of resume that is two pages long for every year of experience and is absolutely crammed with a wide range of unrelated technical terms. It’s the kind of resume where someone has liberally &lt;strong&gt;sprayed&lt;/strong&gt; the document with verbiage and &lt;strong&gt;prayed&lt;/strong&gt; that some of it tricked someone into interviewing them.&lt;/p&gt;

&lt;p&gt;It doesn’t work.&lt;/p&gt;

&lt;h4 id=&quot;telltale-signs-youve-written-a-spray-and-pray-resume&quot;&gt;Telltale signs you’ve written a Spray and Pray Resume&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Under “Programming Languages,” you list every single programming language you have ever encountered.&lt;/li&gt;
  &lt;li&gt;You list every job, ever.&lt;/li&gt;
  &lt;li&gt;For each job, you list an insane number of different, unrelated responsibilities.&lt;/li&gt;
  &lt;li&gt;You have the world’s most vague Objective Statement.&lt;/li&gt;
  &lt;li&gt;You list at least one OS for which you don’t know how to navigate the file system from a command prompt.&lt;/li&gt;
  &lt;li&gt;You list any UI framework for which you cannot instantly tell me the base class/method/approach for displaying a “Hello world” window.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;whats-so-bad-about-that-huh&quot;&gt;What’s so bad about that, huh?&lt;/h4&gt;
&lt;p&gt;Many people would say these resumes looks desperate, and &lt;a href=&quot;http://lindsayolson.com/what-not-to-say-or-do-in-an-interview-part-2-by-stephanie-lloyd/&quot;&gt;you generally want to avoid looking desperate in an interview&lt;/a&gt;. I don’t really care too much about that however, as Lord knows I have been desperate for work before and lucked out to find a job despite it.&lt;/p&gt;

&lt;p&gt;A more significant problem with this kind of resume is that is just looks lazy. If you can’t make the time to trim your resume down to only those things the interviewer has a chance of caring about, then why should the interviewer make the time to talk to you? Just 2-3 minutes spent making a specific objective statement, removing irrelevant items (or moving them to a Hobbies/Interest section if you really, really want them on your resume) and tightening the resume up in general can work wonders.&lt;/p&gt;

&lt;p&gt;Worse than looking lazy is looking dishonest. If you are confident enough in some skill that you put it on a resume, then you’d damn well better be at least at an intermediate level in it. If you haven’t touched that programming language since high school, leave it off your resume. Otherwise, as soon as you have to tell an interviewer you don’t know much about &lt;strong&gt;something&lt;/strong&gt; on your resume, you bring &lt;strong&gt;everything&lt;/strong&gt; into question. It reflects poorly upon you, and the interviewer will subsequently devote a fair amount of time fact-checking your resume rather than really engaging with you.&lt;/p&gt;

&lt;p&gt;Even if you don’t look lazy (which you might), and even if you don’t seem dishonest (which you &lt;strong&gt;will&lt;/strong&gt;), you’re still doing yourself a disservice. Why? Because your strengths will be lost in the “noise” you create with unrelated terms and bullet-points. I promise you, even if you are just graduating from school, you already have strengths that are worth showcasing on a resume. It’s many times more effective to have three bullet points that prominently highlight things you excel at than to hide those amongst umpteen other areas where you aren’t so hot. By paring down your resume and saying &lt;strong&gt;less&lt;/strong&gt;, you can let your strengths shine that much more and seem &lt;strong&gt;stronger&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Almost all of those problems listed earlier can be solved by simply going over your resume, and asking yourself “Could I answer a simple question about this?” If the answer is no, leave it off your resume. Otherwise, you might just be sitting across from someone like me who ALWAYS picks one of the programming languages you put at the end of your list and asks you to compare and contrast it against a language from the front of your list.&lt;/p&gt;

&lt;p&gt;Oh, and never list XML as a programming language. (Although if anyone ever says that they really meant XSLT and that XSLT is Turing complete, I’ll be suitably impressed to overlook the mistake. Throw in a “Duh” for good measure though)&lt;/p&gt;

&lt;p&gt;-SP&lt;/p&gt;
</description>
      </item>
    

  </channel>
</rss>
